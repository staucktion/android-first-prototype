name: Build Release APK on PR Comment

on:
    issue_comment:
        types: [created]

jobs:
    build:
        if: github.event.issue.pull_request != null && github.event.comment.body == '/build-apk'
        runs-on: ubuntu-latest

        steps:
            - name: Get PR branch + commit SHA
              id: pr_info
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const pr = await github.rest.pulls.get({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        pull_number: context.issue.number
                      });

                      core.setOutput('ref', pr.data.head.ref);
                      core.setOutput('repo', pr.data.head.repo.full_name);
                      core.setOutput('sha', pr.data.head.sha);

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  ref: ${{ steps.pr_info.outputs.sha }}
                  repository: ${{ steps.pr_info.outputs.repo }}
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up JDK
              uses: actions/setup-java@v3
              with:
                  distribution: "zulu"
                  java-version: "17"

            - name: Recreate keystore.properties
              run: |
                  echo "${{ secrets.KEYSTORE_PROPERTIES }}" > keystore.properties

            - name: Set up Gradle
              uses: gradle/gradle-build-action@v2

            - name: Build release APK
              run: ./gradlew assembleRelease

            - name: Rename APK with PR ID and run ID and move to root
              run: |
                  mv app/build/outputs/apk/release/app-release.apk $GITHUB_WORKSPACE/Staucktion-debug-${{ github.event.issue.number }}-${{ github.run_id }}.apk

            - name: Upload APK
              uses: actions/upload-artifact@v4
              with:
                  name: Staucktion-APK
                  path: Staucktion-debug-${{ github.event.issue.number }}-${{ github.run_id }}.apk

            - name: Get artifact ID
              id: artifact_info
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const runId = context.runId;
                      const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          run_id: runId
                      });

                      const apkArtifact = artifacts.data.artifacts.find(a => a.name === "Staucktion-APK");
                      if (!apkArtifact) throw new Error("APK artifact not found");

                      core.setOutput("artifact_id", apkArtifact.id);

            - name: Comment with download link
              if: success()
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const prNumber = context.issue.number;
                      const runId = context.runId;
                      const artifactId = "${{ steps.artifact_info.outputs.artifact_id }}";
                      const owner = context.repo.owner;
                      const repo = context.repo.repo;
                      const downloadUrl = `https://github.com/${owner}/${repo}/actions/runs/${runId}/artifacts/${artifactId}`;

                      github.rest.issues.createComment({
                          issue_number: prNumber,
                          owner,
                          repo,
                          body: `âœ… APK build is done!\n\nðŸ“¦ [Download APK directly](${downloadUrl})`
                      });
